---
AWSTemplateFormatVersion: "2010-09-09"
Description: AWS 1st Project

#파라메터
Parameters:
  ProjectName:
    Type: String
    Description: Project Name
  RegionName:
    Type: String
    Description: Region Name
  MyPubIp:
    Type: String
    Description: My Public IP Address
    Default: 0.0.0.0/0

Mappings:
  CidrMap:
    ap-northeast-2:
      VpcCidr: 10.1.0.0/16
      PubSn1Cidr: 10.1.1.0/24
      PubSn2Cidr: 10.1.2.0/24
      WebSn3Cidr: 10.1.3.0/24
      WebSn4Cidr: 10.1.4.0/24   
    sa-east-1:
      VpcCidr: 10.3.0.0/16
      PubSn1Cidr: 10.3.1.0/24
      PubSn2Cidr: 10.3.2.0/24
      WebSn3Cidr: 10.3.3.0/24
      WebSn4Cidr: 10.3.4.0/24
  RegionMap:
    ap-northeast-2:
      VpnAmi: ami-09a093fa2e3bfca5a
      VpnPriIp: 10.1.2.100

#!!! AMI 바뀔 경우 대비해둘 것      
  AmiMap:
    ap-northeast-2:
      Ami: ami-06087749a704b8168
    sa-east-1:
      Ami: ami-001e4add0d2911acb

#컨디션
Conditions:
  CreateOpenVpn: !Equals [!Ref "AWS::Region", ap-northeast-2]

Resources:

###############################################################
### EC2-OpenVPN ###
###############################################################
  OpenVpnSg:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateOpenVpn
    Properties:
      GroupDescription: !Sub "${AWS::Region} OpenVPN Security Group"
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyPubIp
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyPubIp
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref MyPubIp
        - IpProtocol: tcp
          FromPort: 943
          ToPort: 943
          CidrIp: !Ref MyPubIp
        - IpProtocol: tcp
          FromPort: 945
          ToPort: 945
          CidrIp: !Ref MyPubIp
        - IpProtocol: udp
          FromPort: 1194
          ToPort: 1194
          CidrIp: !Ref MyPubIp
      Tags:
        - Key : Name
          Value : !Sub "${ProjectName}-${RegionName}-openvpn-sg"

  OpenVpnInterface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateOpenVpn
    Properties:
      Description: OpenVpn Instance Interface Eth0
      SubnetId: !ImportValue PubSn2Id
      SourceDestCheck: true
      GroupSet:
        - !Ref OpenVpnSg
      PrivateIpAddress: !FindInMap [RegionMap, !Ref "AWS::Region", VpnPriIp]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-openvpn-interface"

  OpenVpnEip:
    Type: AWS::EC2::EIP
    Condition: CreateOpenVpn
    Properties:
      InstanceId: !Ref OpenVpn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-openvpn-eip"

  OpenVpn:
    Type: AWS::EC2::Instance
    Condition: CreateOpenVpn
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", VpnAmi]
      InstanceType: t2.small
      KeyName: !ImportValue KeyPairName1
      NetworkInterfaces:
        - DeviceIndex: 0
          NetworkInterfaceId: !Ref OpenVpnInterface
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-openvpn"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt update -y
          apt install -y expect
          cat << EOF > /tmp/openvpn_expect.exp
          #!/usr/bin/expect
          set timeout 30
          spawn ovpn-init --ec2
          expect "Please enter 'DELETE' to delete existing configuration:"
          send "DELETE\r"
          expect "Please enter 'yes' to indicate your agreement \[no\]"
          send "yes\r"
          expect "Press ENTER for default \[yes\]"
          send "yes\r"
          expect "Press Enter for default"
          send "1\r"
          expect "Press ENTER for default"
          send "\r"
          expect "Press ENTER for default"
          send "\r"        
          expect "Press ENTER for default"
          send "943\r"
          expect "Press ENTER for default"
          send "443\r"
          expect "Press ENTER for default"
          send "no\r"
          expect "Press ENTER for default"
          send "no\r"
          expect "Press ENTER for EC2 default"
          send "yes\r"
          expect "Press ENTER for default"
          send "yes\r"
          expect "account"
          send "P@ssw0rd\r"
          expect "account"
          send "P@ssw0rd\r"
          expect "Activation"
          send "\r"
          expect eof  ;
          EOF
          chmod +x /tmp/openvpn_expect.exp    
          /tmp/openvpn_expect.exp > /tmp/expect_output.log 2>&1
          systemctl start openvpnas.service
          systemctl enable openvpnas.service
          wget https://raw.githubusercontent.com/genesis0614/project1/refs/heads/main/bash-shell/ubuntu-nfs-server.sh
          chmod +x ubuntu-nfs-server.sh
          sh ubuntu-nfs-server.sh
          rm -f ubuntu-nfs-server.sh
          wget -P /nfs-shared/ https://raw.githubusercontent.com/genesis0614/project1/refs/heads/main/bash-shell/ping.sh
          chmod +x /nfs-shared/ping.sh

# OutPuts
Outputs:
  OpenVpnPriIp:
    Description: The OpenVPN Private IP Address
    Value: !GetAtt OpenVpn.PrivateIp
    Export:
      Name: OpenVpnPriIp     