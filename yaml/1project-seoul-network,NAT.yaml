---
AWSTemplateFormatVersion: "2010-09-09"
Description: AWS 1st Project
###############################################################
### 주의사항 ###
# 1. AMI 이미지ID 체크
# 2. 
###############################################################
### 미완성 ###
# 1. TGW 멀티리전 연결
# 2. Site to Site VPN 연결
# 3. 온프레미스 기업망
# 4. Route53 연결
# 5. Global Accelerator
# +. OPENVPN - 라우팅 설정-설정값에서 가능한지 체크해둘것
###############################################################
### 가능성의 짐승 ###
# 1. 인스턴스에 iam 자격을 넣어볼것(인스선택-액션-시큐리티-modify IAM role)  다하고나서 # aws iam list-users
###############################################################

#파라메터
Parameters:
  ProjectName:
    Type: String
    Description: Project Name
  RegionName:
    Type: String
    Description: Region Name
  MyPubIp:
    Type: String
    Description: My Public IP Address
    Default: 0.0.0.0/0

Mappings:
  CidrMap:
    ap-northeast-2:
      VpcCidr: 10.1.0.0/16
      PubSn1Cidr: 10.1.1.0/24
      PubSn2Cidr: 10.1.2.0/24
      WebSn3Cidr: 10.1.3.0/24
      WebSn4Cidr: 10.1.4.0/24   
    sa-east-1:
      VpcCidr: 10.3.0.0/16
      PubSn1Cidr: 10.3.1.0/24
      PubSn2Cidr: 10.3.2.0/24
      WebSn3Cidr: 10.3.3.0/24
      WebSn4Cidr: 10.3.4.0/24
  RegionMap:
    ap-northeast-2:
      VpnAmi: ami-09a093fa2e3bfca5a
      VpnPriIp: 10.1.2.100

#!!! AMI 바뀔 경우 대비해둘 것      
  AmiMap:
    ap-northeast-2:
      Ami: ami-06087749a704b8168
    sa-east-1:
      Ami: ami-001e4add0d2911acb

#컨디션
Conditions:
  CreateOpenVpn: !Equals [!Ref "AWS::Region", ap-northeast-2]
  CreateNatInstance: !Equals [!Ref "AWS::Region", ap-northeast-2]
  CreateNatGateway: !Equals [!Ref "AWS::Region", sa-east-1]   
  CreateSeoulKey: !Equals [!Ref "AWS::Region", ap-northeast-2]   
  CreateSaoPauloKey: !Equals [!Ref "AWS::Region", sa-east-1]

###############################################################
### 기본 인프라 제작 시작###
###############################################################
Resources:
# VPC & Internet Gateway
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-vpc"

  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-igw"

  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc    


###############################################################
### 서브넷, 라우팅 테이블, 연결 ###
###############################################################
# 공인 서브넷12, 라우트 테이블12, 연결
  PubSn1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn1Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-sn1"
  PubSn2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn2Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-sn2"

  PubRt12:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-rt12"

  PubRt12Sn1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRt12
      SubnetId: !Ref PubSn1

  PubRt12Sn2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRt12
      SubnetId: !Ref PubSn2

  PubRt12DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: IgwAttachment
    Properties:
      RouteTableId: !Ref PubRt12
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw

# 사설 서브넷34, 라우트 테이블34, 연결
  WebSn3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", WebSn3Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-sn3"
  WebSn4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", WebSn4Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-sn4"          

  WebRt34:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-rt34"

  WebRt34Sn3Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRt34
      SubnetId: !Ref WebSn3

  WebRt34Sn4Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRt34
      SubnetId: !Ref WebSn4

#NAT 인스턴스 사용할 경우 (서울)
  WebRt34DefaultRoute:
    Type: AWS::EC2::Route
    Condition: CreateNatInstance
    DependsOn: NatInstance
    Properties:
      RouteTableId: !Ref WebRt34
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance

#NAT게이트웨이 사용할 경우 (상파울루)
  WebRt34DefaultRoute2:
    Type: AWS::EC2::Route
    Condition: CreateNatGateway
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref WebRt34
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway


###############################################################
### 키페어 ###
###############################################################
# 서울 키
  KeyPairSeoul:
    Type: AWS::EC2::KeyPair
    Condition: CreateSeoulKey
    Properties:
      KeyName: seoul-key
      PublicKeyMaterial: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvar75BjLHVxgqjujQM0G63WMbQxzo9gcKi09etWY9VFCcVDFbsigeL9MTInRWz7/5q78OuvMIhehUXr/jlsRStlifzRrKpjpLLD132D+uW/oXoY8cBVd97TM2gCTOkDQtxvrFQOlxb5sLj0vy5UgoUs0Kkx5JzbulwliVb+066YShMmESNf9Kh9ZEjDGjZUwa9xdrMJfNdd51r6YH30Zx2F/JCw9yJ7ciXOXkgi3OB9L2LK2feue21M0QxdEg/awshBqaU6Kb7V6hXwQ+ZuOuE6Q+5lg1v8HX4qZN+i+s5y9pfGLw0KEpsZK6bFzodZkEWe/aYFySP3ZIf5A1X1w/ rsa-key-20240926

# 상파울로 키
  KeyPairSaoPaulo:
    Type: AWS::EC2::KeyPair
    Condition: CreateSaoPauloKey
    Properties:
      KeyName: saopaulo-key
      PublicKeyMaterial: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRtG2YVzCSAWnL9L3Y61LXr+rW7GyZImcNZf/kpmZFKKFcWNWui14T7JxLhT3+31zHzQSV2Qvbvpfub7/BcJDQub/oKJaHpNdNT8jyF0r70wYPeP1aUNkn0d+WpFGU/ZCbwYCa9g3BF9v3G0Bj4S4XF844L90tRaGzTwyKeXWRKMghJzFGx8SkVdCWOm4Iogmvl9w2ZoW/Pl1eTm/Vldeh2LpqfEUgt0UIg0jDKA+Tg8ZxMweIsgYkdHitcuoAc8NKB87txrrBrmt5pxNJ+A64o8dr6Gqudj/ypLV6W4FKRr622qxd+4tdLqeNmDqxUSc9iDC8fbgZbQgBEUbH0i/D rsa-key-20240926


###############################################################
### NAT Gateway ###
###############################################################
# Nat Gateway & Elastic IP
  NatGatewayEip:
    Type: AWS::EC2::EIP
    Condition: CreateNatGateway   
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-nat-eip"

  NatGateway:
    Type: AWS::EC2::NatGateway
    Condition: CreateNatGateway   
    DependsOn: NatGatewayEip
    Properties:
      AllocationId: !GetAtt NatGatewayEip.AllocationId
      SubnetId: !Ref PubSn1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-nat-gw"

###############################################################
### EC2-Nat Instance ###
###############################################################
#NAT 인스턴스 보안그룹
  NatInstanceSg:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateNatInstance
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: !Sub "${AWS::Region} Nat Instance Security Group"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      Tags:
        - Key : Name
          Value : !Sub "${ProjectName}-${RegionName}-nat-instance-sg"
  NatInstanceSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CreateNatInstance
    Properties:
      GroupId: !GetAtt NatInstanceSg.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref MyPubIp

# NAT 인스턴스 제작
  NatInstance:
    Type: AWS::EC2::Instance
    Condition: CreateNatInstance
    Properties:
      ImageId: !FindInMap [AmiMap, !Ref "AWS::Region", Ami]
      InstanceType: t2.micro
      KeyName: !Ref KeyPairSeoul
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !Ref NatInstanceSg
          SubnetId: !Ref PubSn1
      SourceDestCheck: false
      Tags:
        - Key : Name
          Value : !Sub "${ProjectName}-${RegionName}-nat-instance"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
          sysctl -p /etc/sysctl.conf
          yum install -y iptables-services
          systemctl start iptables
          systemctl enable iptables
          iptables -F
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          service iptables save


###############################################################
# OutPuts
###############################################################
Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref Vpc
    Export:
      Name: VpcId
  PubSn1Id:
    Description: The Public Subnet1 ID
    Value: !Ref PubSn1
    Export:
      Name: PubSn1Id
  PubSn2Id:
    Description: The Public Subnet2 ID
    Value: !Ref PubSn2
    Export:
      Name: PubSn2Id
  WebSn3Id:
    Description: The Private Subnet3 ID
    Value: !Ref WebSn3
    Export:
      Name: WebSn3Id
  WebSn4Id:
    Description: The Private Subnet4 ID
    Value: !Ref WebSn4
    Export:
      Name: WebSn4Id
  KeyPairName1:
    Condition: CreateSeoulKey
    Description: The Key Pair Name
    Value: !Ref KeyPairSeoul
    Export:
      Name: KeyPairName1 
  KeyPairName2:
    Condition: CreateSaoPauloKey
    Description: The Key Pair Name
    Value: !Ref KeyPairSaoPaulo
    Export:
      Name: KeyPairName2      
...      
